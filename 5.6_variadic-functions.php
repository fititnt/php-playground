<?php

//http://php.net/manual/en/migration56.new-features.php#migration56.new-features.const-scalar-exprs
//http://php.net/manual/en/functions.arguments.php#functions.variable-arg-list

echo PHP_EOL . '-----------------------------------' . PHP_EOL;
// Example #7 Using ... to access variable arguments

function f($req, $opt = null, ...$params) {
    // $params is an array containing the remaining arguments.
    printf('$req: %d; $opt: %d; number of params: %d'."\n",
           $req, $opt, count($params));
}

f(1);
f(1, 2);
f(1, 2, 3);
f(1, 2, 3, 4);
f(1, 2, 3, 4, 5);

//$req: 1; $opt: 0; number of params: 0
//$req: 1; $opt: 2; number of params: 0
//$req: 1; $opt: 2; number of params: 1
//$req: 1; $opt: 2; number of params: 2
//$req: 1; $opt: 2; number of params: 3

echo PHP_EOL . '-----------------------------------' . PHP_EOL;

function sum(...$numbers) {
    $acc = 0;
    foreach ($numbers as $n) {
        $acc += $n;
    }
    return $acc;
}

echo sum(1, 2, 3, 4); // 10

echo PHP_EOL . '-----------------------------------' . PHP_EOL;
// You can also use ... when calling functions to unpack an array or Traversable variable or literal into the argument list:
// Example #8 Using ... to provide arguments

function add($a, $b) {
    return $a + $b;
}

echo add(...[1, 2])."\n"; // 3

$a = [1, 2];
echo add(...$a); // 3

echo PHP_EOL . '-----------------------------------' . PHP_EOL;
//You may specify normal positional arguments before the ... token. In this case, only the trailing arguments that 
// don't match a positional argument will be added to the array generated by ....
// It is also possible to add a type hint before the ... token. If this is present, then all arguments captured 
// by ... must be objects of the hinted class.
//Example #9 Type hinted variable arguments

function total_intervals($unit, DateInterval ...$intervals) {
    $time = 0;
    foreach ($intervals as $interval) {
        $time += $interval->$unit;
    }
    return $time;
}

$a = new DateInterval('P1D');
$b = new DateInterval('P2D');
echo total_intervals('d', $a, $b).' days';